Creating a Debian Package (.deb) for Your Python App
This guide will walk you through the process of creating a simple Debian package for the font_changer.py script. A .deb package is a standard way to install software on Linux Mint, Ubuntu, and other Debian-based distributions.

Step 1: The Directory Structure
The first step is to create a specific directory structure. All files in the package will be placed in a directory that mirrors their final location on the user's system.

Create a main directory for your package (e.g., font-settings-0.1). Inside it, you'll create the necessary subdirectories.

font-settings-0.1/
├── DEBIAN/
│   └── control
└── usr/
    └── local/
        └── bin/
            └── font_changer.py


font-settings-0.1/: This is the root directory of your package. The name typically includes the package name and version.

DEBIAN/: This is a special directory that contains control files for the package manager (dpkg). It is not installed on the system.

usr/local/bin/: This is where you will place your executable Python script. The usr/local/ prefix is a good convention for locally installed applications.

Step 2: The DEBIAN/control File
The control file is the most important part of the package. It provides metadata about the package, such as its name, version, description, and dependencies.

Inside the DEBIAN directory, create a file named control (no file extension) and add the following content.

Package: font-settings
Version: 0.1
Section: util
Priority: optional
Architecture: all
Depends: python3, python3-tk
Maintainer: Your Name <you@example.com>
Description: A simple GUI application to change system font settings.
 This tool provides a graphical interface to modify the font,
 document, and monospace fonts, as well as the text scaling factor.


Let's break down the fields:

Package: A unique, lowercase name for your package.

Version: The version number of your application.

Section: The category of the package (e.g., utils, editors, games).

Priority: How important the package is (e.g., optional, required).

Architecture: For a Python script, all is appropriate since it's not compiled for a specific processor architecture.

Depends: A comma-separated list of other packages your script needs to run. Crucially, we include python3-tk here, as this will ensure the user's system has the tkinter library installed when they install your package.

Maintainer: Your name and email.

Description: A brief one-line description, followed by a more detailed, indented description on subsequent lines.

Step 3: Preparing the Python Script
Next, you need to place your Python script in the correct location and make it executable.

Copy the font_changer.py script into the usr/local/bin/ directory you created.

Rename it to something simpler, like font_settings, since it's going into a bin directory for executables.

Add the Shebang: Open the font_settings file and add the following line to the very top:
#!/usr/bin/env python3
This line tells the system to use the Python 3 interpreter to run the script.

Make the file executable.

# Assuming you are in the font-settings-0.1 directory
chmod +x usr/local/bin/font_settings


Step 4: Building the Package
Now that the directory structure and files are in place, you can build the .deb file. From the parent directory of font-settings-0.1, run the following command:

dpkg-deb --build font-settings-0.1


This will create a font-settings-0.1.deb file in the same directory.

Step 5: Installing and Testing
You can now install your new package to test it.

# Install the package
sudo dpkg -i font-settings-0.1.deb

# If there are dependency issues, use this command to fix them
sudo apt-get install -f


After installation, you should be able to run your application directly from the terminal just by typing its name:

font_settings


To remove the package, you can use apt:

sudo apt-get remove font-settings


This process gives you a simple, standard way to share your application with others on Linux Mint and similar systems.
